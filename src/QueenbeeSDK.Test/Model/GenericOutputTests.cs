/* 
 * Queenbee Recipe Schema
 *
 * Documentation for Queenbee recipe schema.
 *
 * The version of the OpenAPI document: 1.6.6
 * Contact: info@ladybug.tools
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using QueenbeeSDK.Api;
using QueenbeeSDK.Model;
using QueenbeeSDK.Client;
using QueenbeeSDK;

using System.Reflection;
using Newtonsoft.Json;

namespace QueenbeeSDK.Test
{
    /// <summary>
    ///  Class for testing GenericOutput
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GenericOutputTests
    {
        // TODO uncomment below to declare an instance variable for GenericOutput
        //private GenericOutput instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of GenericOutput
            //instance = new GenericOutput();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GenericOutput
        /// </summary>
        [Test]
        public void GenericOutputInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), instance);
        }

        /// <summary>
        /// Test deserialize a TaskReturn from type GenericOutput
        /// </summary>
        [Test]
        public void TaskReturnDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a TaskReturn from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new TaskReturn().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGIntegerOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGIntegerOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGIntegerOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGIntegerOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGObjectOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGObjectOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGObjectOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGObjectOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGStringOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGStringOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGStringOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGStringOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a PathOutput from type GenericOutput
        /// </summary>
        [Test]
        public void PathOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a PathOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new PathOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGBooleanOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGBooleanOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGBooleanOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGBooleanOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGFileOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGFileOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGFileOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGFileOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGPathOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGPathOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGPathOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGPathOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGFolderOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGFolderOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGFolderOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGFolderOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGArrayOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGArrayOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGArrayOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGArrayOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a FromOutput from type GenericOutput
        /// </summary>
        [Test]
        public void FromOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a FromOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new FromOutput().ToJson()));
        }
        /// <summary>
        /// Test deserialize a DAGNumberOutput from type GenericOutput
        /// </summary>
        [Test]
        public void DAGNumberOutputDeserializeFromGenericOutputTest()
        {
            // TODO uncomment below to test deserialize a DAGNumberOutput from type GenericOutput
            //Assert.IsInstanceOf(typeof(GenericOutput), JsonConvert.DeserializeObject<GenericOutput>(new DAGNumberOutput().ToJson()));
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Annotations'
        /// </summary>
        [Test]
        public void AnnotationsTest()
        {
            // TODO unit test for the property 'Annotations'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

    }

}
